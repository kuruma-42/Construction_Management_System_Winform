<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lngAdd" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="lngEnd" xml:space="preserve">
    <value>종료</value>
  </data>
  <data name="lngHome" xml:space="preserve">
    <value>홈</value>
  </data>
  <data name="lngInfo" xml:space="preserve">
    <value>정보</value>
  </data>
  <data name="lngMenuItems" xml:space="preserve">
    <value>메뉴 항목</value>
  </data>
  <data name="lngProgram" xml:space="preserve">
    <value>프로그램</value>
  </data>
  <data name="lngRecentlyUsedMenu" xml:space="preserve">
    <value>최근 사용 메뉴</value>
  </data>
  <data name="lngSearch" xml:space="preserve">
    <value>검색</value>
  </data>
  <data name="msgAlreadyUsed" xml:space="preserve">
    <value>다른 곳에서 이미 사용 중입니다.</value>
  </data>
  <data name="msgAuthority" xml:space="preserve">
    <value>권한이 없습니다. </value>
  </data>
  <data name="msgChangeUsingFlag" xml:space="preserve">
    <value>사용으로 전환합니다.</value>
  </data>
  <data name="msgClickUsingFlagPlz" xml:space="preserve">
    <value>사용을 눌러주세요.</value>
  </data>
  <data name="msgDeviceId" xml:space="preserve">
    <value>장비아이디</value>
  </data>
  <data name="msgDuplicated" xml:space="preserve">
    <value>중복 데이터 입니다.</value>
  </data>
  <data name="msgEndDate" xml:space="preserve">
    <value>퇴근일시</value>
  </data>
  <data name="msgInputValue" xml:space="preserve">
    <value>값을 입력해 주세요. </value>
  </data>
  <data name="msgMyCompanyStatus" xml:space="preserve">
    <value>내 업체만 여부</value>
  </data>
  <data name="msgMyConstructionTypesStatus" xml:space="preserve">
    <value>내 공종만 여부</value>
  </data>
  <data name="msgMyTeamStatus" xml:space="preserve">
    <value>내 팀만 여부</value>
  </data>
  <data name="msgMyZoneStatus" xml:space="preserve">
    <value>내 구역만 여부</value>
  </data>
  <data name="msgNoneDeviceId" xml:space="preserve">
    <value>장비 아이디를 선택해주세요.</value>
  </data>
  <data name="msgNoneDeviceInOut" xml:space="preserve">
    <value>장치 출입을 선택해주세요.</value>
  </data>
  <data name="msgNoneDeviceName" xml:space="preserve">
    <value>장치 이름을 입력해주세요.</value>
  </data>
  <data name="msgNoneDeviceType" xml:space="preserve">
    <value>장치 유형을 선택해주세요.</value>
  </data>
  <data name="msgNotSelected" xml:space="preserve">
    <value>선택된 데이터가 없습니다.</value>
  </data>
  <data name="msgSameName" xml:space="preserve">
    <value>같은 이름이 이미 존재하고 있습니다.</value>
  </data>
  <data name="msgStartDate" xml:space="preserve">
    <value>출근일시</value>
  </data>
  <data name="msgUsageStatus" xml:space="preserve">
    <value>사용 여부</value>
  </data>
  <data name="msgWorkerApprovalStatus" xml:space="preserve">
    <value>근로자 승인 여부</value>
  </data>
  <data name="wEventDate" xml:space="preserve">
    <value>이벤트일시</value>
  </data>
</root>