//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace EldigmPlusApp.Mem_WsWorkerLaborSearch {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWsWorkerLaborSearch", Namespace="http://tempuri.org/")]
    public partial class WsWorkerLaborSearch : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sLaborCompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback sLaborConstListOperationCompleted;
        
        private System.Threading.SendOrPostCallback sLaborJobListOperationCompleted;
        
        private System.Threading.SendOrPostCallback sLaborBlockListOperationCompleted;
        
        private System.Threading.SendOrPostCallback sLaborTeamListOperationCompleted;
        
        private System.Threading.SendOrPostCallback sLaborSearchOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsWorkerLaborSearch() {
            this.Url = global::EldigmPlusApp.Properties.Settings.Default.EldigmPlusApp_Mem_WsWorkerLaborSearch_WsWorkerLaborSearch;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sLaborCompanyListCompletedEventHandler sLaborCompanyListCompleted;
        
        /// <remarks/>
        public event sLaborConstListCompletedEventHandler sLaborConstListCompleted;
        
        /// <remarks/>
        public event sLaborJobListCompletedEventHandler sLaborJobListCompleted;
        
        /// <remarks/>
        public event sLaborBlockListCompletedEventHandler sLaborBlockListCompleted;
        
        /// <remarks/>
        public event sLaborTeamListCompletedEventHandler sLaborTeamListCompleted;
        
        /// <remarks/>
        public event sLaborSearchCompletedEventHandler sLaborSearchCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsWorkerLaborSearch/sLaborCompanyList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sLaborCompanyList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAuthCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")] out DataComCombo[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sLaborCompanyList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pCoCd});
            reList = ((DataComCombo[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sLaborCompanyListAsync(string pSiteCd, string pAuthCd, string pCoCd) {
            this.sLaborCompanyListAsync(pSiteCd, pAuthCd, pCoCd, null);
        }
        
        /// <remarks/>
        public void sLaborCompanyListAsync(string pSiteCd, string pAuthCd, string pCoCd, object userState) {
            if ((this.sLaborCompanyListOperationCompleted == null)) {
                this.sLaborCompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsLaborCompanyListOperationCompleted);
            }
            this.InvokeAsync("sLaborCompanyList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pCoCd}, this.sLaborCompanyListOperationCompleted, userState);
        }
        
        private void OnsLaborCompanyListOperationCompleted(object arg) {
            if ((this.sLaborCompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sLaborCompanyListCompleted(this, new sLaborCompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsWorkerLaborSearch/sLaborConstList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sLaborConstList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAuthCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCcode, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")] out DataComCombo[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sLaborConstList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pCcode});
            reList = ((DataComCombo[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sLaborConstListAsync(string pSiteCd, string pAuthCd, string pCcode) {
            this.sLaborConstListAsync(pSiteCd, pAuthCd, pCcode, null);
        }
        
        /// <remarks/>
        public void sLaborConstListAsync(string pSiteCd, string pAuthCd, string pCcode, object userState) {
            if ((this.sLaborConstListOperationCompleted == null)) {
                this.sLaborConstListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsLaborConstListOperationCompleted);
            }
            this.InvokeAsync("sLaborConstList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pCcode}, this.sLaborConstListOperationCompleted, userState);
        }
        
        private void OnsLaborConstListOperationCompleted(object arg) {
            if ((this.sLaborConstListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sLaborConstListCompleted(this, new sLaborConstListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsWorkerLaborSearch/sLaborJobList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sLaborJobList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")] out DataComCombo[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sLaborJobList", new object[] {
                        pSiteCd});
            reList = ((DataComCombo[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sLaborJobListAsync(string pSiteCd) {
            this.sLaborJobListAsync(pSiteCd, null);
        }
        
        /// <remarks/>
        public void sLaborJobListAsync(string pSiteCd, object userState) {
            if ((this.sLaborJobListOperationCompleted == null)) {
                this.sLaborJobListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsLaborJobListOperationCompleted);
            }
            this.InvokeAsync("sLaborJobList", new object[] {
                        pSiteCd}, this.sLaborJobListOperationCompleted, userState);
        }
        
        private void OnsLaborJobListOperationCompleted(object arg) {
            if ((this.sLaborJobListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sLaborJobListCompleted(this, new sLaborJobListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsWorkerLaborSearch/sLaborBlockList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sLaborBlockList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAuthCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCcode, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")] out DataComCombo[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sLaborBlockList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pCcode});
            reList = ((DataComCombo[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sLaborBlockListAsync(string pSiteCd, string pAuthCd, string pCcode) {
            this.sLaborBlockListAsync(pSiteCd, pAuthCd, pCcode, null);
        }
        
        /// <remarks/>
        public void sLaborBlockListAsync(string pSiteCd, string pAuthCd, string pCcode, object userState) {
            if ((this.sLaborBlockListOperationCompleted == null)) {
                this.sLaborBlockListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsLaborBlockListOperationCompleted);
            }
            this.InvokeAsync("sLaborBlockList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pCcode}, this.sLaborBlockListOperationCompleted, userState);
        }
        
        private void OnsLaborBlockListOperationCompleted(object arg) {
            if ((this.sLaborBlockListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sLaborBlockListCompleted(this, new sLaborBlockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsWorkerLaborSearch/sLaborTeamList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sLaborTeamList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAuthCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTeamCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCocd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")] out DataComCombo[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sLaborTeamList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pTeamCd,
                        pCocd});
            reList = ((DataComCombo[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sLaborTeamListAsync(string pSiteCd, string pAuthCd, string pTeamCd, string pCocd) {
            this.sLaborTeamListAsync(pSiteCd, pAuthCd, pTeamCd, pCocd, null);
        }
        
        /// <remarks/>
        public void sLaborTeamListAsync(string pSiteCd, string pAuthCd, string pTeamCd, string pCocd, object userState) {
            if ((this.sLaborTeamListOperationCompleted == null)) {
                this.sLaborTeamListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsLaborTeamListOperationCompleted);
            }
            this.InvokeAsync("sLaborTeamList", new object[] {
                        pSiteCd,
                        pAuthCd,
                        pTeamCd,
                        pCocd}, this.sLaborTeamListOperationCompleted, userState);
        }
        
        private void OnsLaborTeamListOperationCompleted(object arg) {
            if ((this.sLaborTeamListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sLaborTeamListCompleted(this, new sLaborTeamListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsWorkerLaborSearch/sLaborSearch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sLaborSearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBlockCcd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pConstCcd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTeamCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSearchCondition, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSearchTxt, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")] out DataLaborSearch[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sLaborSearch", new object[] {
                        pSiteCd,
                        pBlockCcd,
                        pConstCcd,
                        pCoCd,
                        pTeamCd,
                        pSearchCondition,
                        pSearchTxt});
            reList = ((DataLaborSearch[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sLaborSearchAsync(string pSiteCd, string pBlockCcd, string pConstCcd, string pCoCd, string pTeamCd, string pSearchCondition, string pSearchTxt) {
            this.sLaborSearchAsync(pSiteCd, pBlockCcd, pConstCcd, pCoCd, pTeamCd, pSearchCondition, pSearchTxt, null);
        }
        
        /// <remarks/>
        public void sLaborSearchAsync(string pSiteCd, string pBlockCcd, string pConstCcd, string pCoCd, string pTeamCd, string pSearchCondition, string pSearchTxt, object userState) {
            if ((this.sLaborSearchOperationCompleted == null)) {
                this.sLaborSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsLaborSearchOperationCompleted);
            }
            this.InvokeAsync("sLaborSearch", new object[] {
                        pSiteCd,
                        pBlockCcd,
                        pConstCcd,
                        pCoCd,
                        pTeamCd,
                        pSearchCondition,
                        pSearchTxt}, this.sLaborSearchOperationCompleted, userState);
        }
        
        private void OnsLaborSearchOperationCompleted(object arg) {
            if ((this.sLaborSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sLaborSearchCompleted(this, new sLaborSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")]
    public partial class DataComCombo {
        
        private int vALUEField;
        
        private bool vALUEFieldSpecified;
        
        private string tEXTField;
        
        /// <remarks/>
        public int VALUE {
            get {
                return this.vALUEField;
            }
            set {
                this.vALUEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VALUESpecified {
            get {
                return this.vALUEFieldSpecified;
            }
            set {
                this.vALUEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEXT {
            get {
                return this.tEXTField;
            }
            set {
                this.tEXTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.Worker")]
    public partial class DataLaborSearch {
        
        private int lAB_NOField;
        
        private bool lAB_NOFieldSpecified;
        
        private string cO_NMField;
        
        private string lAB_NMField;
        
        private string jOB_NMField;
        
        private string tEAM_NMField;
        
        private int bIRTH_DATEField;
        
        private bool bIRTH_DATEFieldSpecified;
        
        private string mOBILE_NOField;
        
        private int uSER_NOField;
        
        private bool uSER_NOFieldSpecified;
        
        private string aUTH_CDField;
        
        /// <remarks/>
        public int LAB_NO {
            get {
                return this.lAB_NOField;
            }
            set {
                this.lAB_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LAB_NOSpecified {
            get {
                return this.lAB_NOFieldSpecified;
            }
            set {
                this.lAB_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CO_NM {
            get {
                return this.cO_NMField;
            }
            set {
                this.cO_NMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LAB_NM {
            get {
                return this.lAB_NMField;
            }
            set {
                this.lAB_NMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string JOB_NM {
            get {
                return this.jOB_NMField;
            }
            set {
                this.jOB_NMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEAM_NM {
            get {
                return this.tEAM_NMField;
            }
            set {
                this.tEAM_NMField = value;
            }
        }
        
        /// <remarks/>
        public int BIRTH_DATE {
            get {
                return this.bIRTH_DATEField;
            }
            set {
                this.bIRTH_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BIRTH_DATESpecified {
            get {
                return this.bIRTH_DATEFieldSpecified;
            }
            set {
                this.bIRTH_DATEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MOBILE_NO {
            get {
                return this.mOBILE_NOField;
            }
            set {
                this.mOBILE_NOField = value;
            }
        }
        
        /// <remarks/>
        public int USER_NO {
            get {
                return this.uSER_NOField;
            }
            set {
                this.uSER_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USER_NOSpecified {
            get {
                return this.uSER_NOFieldSpecified;
            }
            set {
                this.uSER_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AUTH_CD {
            get {
                return this.aUTH_CDField;
            }
            set {
                this.aUTH_CDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sLaborCompanyListCompletedEventHandler(object sender, sLaborCompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sLaborCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sLaborCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataComCombo[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataComCombo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sLaborConstListCompletedEventHandler(object sender, sLaborConstListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sLaborConstListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sLaborConstListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataComCombo[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataComCombo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sLaborJobListCompletedEventHandler(object sender, sLaborJobListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sLaborJobListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sLaborJobListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataComCombo[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataComCombo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sLaborBlockListCompletedEventHandler(object sender, sLaborBlockListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sLaborBlockListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sLaborBlockListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataComCombo[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataComCombo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sLaborTeamListCompletedEventHandler(object sender, sLaborTeamListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sLaborTeamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sLaborTeamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataComCombo[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataComCombo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sLaborSearchCompletedEventHandler(object sender, sLaborSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sLaborSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sLaborSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataLaborSearch[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataLaborSearch[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591