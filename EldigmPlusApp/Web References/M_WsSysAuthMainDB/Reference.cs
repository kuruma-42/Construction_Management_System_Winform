//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace EldigmPlusApp.M_WsSysAuthMainDB {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWsSysAuthMainDB", Namespace="http://tempuri.org/")]
    public partial class WsSysAuthMainDB : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sSysAuthMainDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback mSysAuthMainDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback exSysAuthMainDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback aSysAuthMainDBOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsSysAuthMainDB() {
            this.Url = global::EldigmPlusApp.Properties.Settings.Default.EldigmPlusApp_WsSAuthMainDB_WsSysAuthMainDB;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sSysAuthMainDBCompletedEventHandler sSysAuthMainDBCompleted;
        
        /// <remarks/>
        public event mSysAuthMainDBCompletedEventHandler mSysAuthMainDBCompleted;
        
        /// <remarks/>
        public event exSysAuthMainDBCompletedEventHandler exSysAuthMainDBCompleted;
        
        /// <remarks/>
        public event aSysAuthMainDBCompletedEventHandler aSysAuthMainDBCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysAuthMainDB/sSysAuthMainDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sSysAuthMainDB([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.SysAuth")] out DataSysAuthMainDB[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sSysAuthMainDB", new object[] {
                        pUsingFlag});
            reList = ((DataSysAuthMainDB[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sSysAuthMainDBAsync(string pUsingFlag) {
            this.sSysAuthMainDBAsync(pUsingFlag, null);
        }
        
        /// <remarks/>
        public void sSysAuthMainDBAsync(string pUsingFlag, object userState) {
            if ((this.sSysAuthMainDBOperationCompleted == null)) {
                this.sSysAuthMainDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsSysAuthMainDBOperationCompleted);
            }
            this.InvokeAsync("sSysAuthMainDB", new object[] {
                        pUsingFlag}, this.sSysAuthMainDBOperationCompleted, userState);
        }
        
        private void OnsSysAuthMainDBOperationCompleted(object arg) {
            if ((this.sSysAuthMainDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sSysAuthMainDBCompleted(this, new sSysAuthMainDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysAuthMainDB/mSysAuthMainDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mSysAuthMainDB([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sauthCd_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sauthNm_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string myblockFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string myconFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mycomFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string myteamFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usingFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string memo_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mSysAuthMainDB", new object[] {
                        sauthCd_val,
                        sauthNm_val,
                        myblockFlag_val,
                        myconFlag_val,
                        mycomFlag_val,
                        myteamFlag_val,
                        usingFlag_val,
                        memo_val});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mSysAuthMainDBAsync(string sauthCd_val, string sauthNm_val, string myblockFlag_val, string myconFlag_val, string mycomFlag_val, string myteamFlag_val, string usingFlag_val, string memo_val) {
            this.mSysAuthMainDBAsync(sauthCd_val, sauthNm_val, myblockFlag_val, myconFlag_val, mycomFlag_val, myteamFlag_val, usingFlag_val, memo_val, null);
        }
        
        /// <remarks/>
        public void mSysAuthMainDBAsync(string sauthCd_val, string sauthNm_val, string myblockFlag_val, string myconFlag_val, string mycomFlag_val, string myteamFlag_val, string usingFlag_val, string memo_val, object userState) {
            if ((this.mSysAuthMainDBOperationCompleted == null)) {
                this.mSysAuthMainDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmSysAuthMainDBOperationCompleted);
            }
            this.InvokeAsync("mSysAuthMainDB", new object[] {
                        sauthCd_val,
                        sauthNm_val,
                        myblockFlag_val,
                        myconFlag_val,
                        mycomFlag_val,
                        myteamFlag_val,
                        usingFlag_val,
                        memo_val}, this.mSysAuthMainDBOperationCompleted, userState);
        }
        
        private void OnmSysAuthMainDBOperationCompleted(object arg) {
            if ((this.mSysAuthMainDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mSysAuthMainDBCompleted(this, new mSysAuthMainDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysAuthMainDB/exSysAuthMainDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string exSysAuthMainDB([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sauthCd_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("exSysAuthMainDB", new object[] {
                        sauthCd_val});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exSysAuthMainDBAsync(string sauthCd_val) {
            this.exSysAuthMainDBAsync(sauthCd_val, null);
        }
        
        /// <remarks/>
        public void exSysAuthMainDBAsync(string sauthCd_val, object userState) {
            if ((this.exSysAuthMainDBOperationCompleted == null)) {
                this.exSysAuthMainDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexSysAuthMainDBOperationCompleted);
            }
            this.InvokeAsync("exSysAuthMainDB", new object[] {
                        sauthCd_val}, this.exSysAuthMainDBOperationCompleted, userState);
        }
        
        private void OnexSysAuthMainDBOperationCompleted(object arg) {
            if ((this.exSysAuthMainDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exSysAuthMainDBCompleted(this, new exSysAuthMainDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysAuthMainDB/aSysAuthMainDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string aSysAuthMainDB([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sauthCd_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sauthNm_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string myblockFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string myconFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mycomFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string myteamFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usingFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sauthLevel_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string memo_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pInputId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("aSysAuthMainDB", new object[] {
                        sauthCd_val,
                        sauthNm_val,
                        myblockFlag_val,
                        myconFlag_val,
                        mycomFlag_val,
                        myteamFlag_val,
                        usingFlag_val,
                        sauthLevel_val,
                        memo_val,
                        pInputId});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aSysAuthMainDBAsync(string sauthCd_val, string sauthNm_val, string myblockFlag_val, string myconFlag_val, string mycomFlag_val, string myteamFlag_val, string usingFlag_val, string sauthLevel_val, string memo_val, string pInputId) {
            this.aSysAuthMainDBAsync(sauthCd_val, sauthNm_val, myblockFlag_val, myconFlag_val, mycomFlag_val, myteamFlag_val, usingFlag_val, sauthLevel_val, memo_val, pInputId, null);
        }
        
        /// <remarks/>
        public void aSysAuthMainDBAsync(string sauthCd_val, string sauthNm_val, string myblockFlag_val, string myconFlag_val, string mycomFlag_val, string myteamFlag_val, string usingFlag_val, string sauthLevel_val, string memo_val, string pInputId, object userState) {
            if ((this.aSysAuthMainDBOperationCompleted == null)) {
                this.aSysAuthMainDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaSysAuthMainDBOperationCompleted);
            }
            this.InvokeAsync("aSysAuthMainDB", new object[] {
                        sauthCd_val,
                        sauthNm_val,
                        myblockFlag_val,
                        myconFlag_val,
                        mycomFlag_val,
                        myteamFlag_val,
                        usingFlag_val,
                        sauthLevel_val,
                        memo_val,
                        pInputId}, this.aSysAuthMainDBOperationCompleted, userState);
        }
        
        private void OnaSysAuthMainDBOperationCompleted(object arg) {
            if ((this.aSysAuthMainDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aSysAuthMainDBCompleted(this, new aSysAuthMainDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.SysAuth")]
    public partial class DataSysAuthMainDB {
        
        private string aUTH_CDField;
        
        private string aUTH_NMField;
        
        private int mYBLOCK_FLAGField;
        
        private bool mYBLOCK_FLAGFieldSpecified;
        
        private int mYCON_FLAGField;
        
        private bool mYCON_FLAGFieldSpecified;
        
        private int mYCOM_FLAGField;
        
        private bool mYCOM_FLAGFieldSpecified;
        
        private int mYTEAM_FLAGField;
        
        private bool mYTEAM_FLAGFieldSpecified;
        
        private int uSING_FLAGField;
        
        private bool uSING_FLAGFieldSpecified;
        
        private int aUTH_LEVELField;
        
        private bool aUTH_LEVELFieldSpecified;
        
        private string mEMOField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AUTH_CD {
            get {
                return this.aUTH_CDField;
            }
            set {
                this.aUTH_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AUTH_NM {
            get {
                return this.aUTH_NMField;
            }
            set {
                this.aUTH_NMField = value;
            }
        }
        
        /// <remarks/>
        public int MYBLOCK_FLAG {
            get {
                return this.mYBLOCK_FLAGField;
            }
            set {
                this.mYBLOCK_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MYBLOCK_FLAGSpecified {
            get {
                return this.mYBLOCK_FLAGFieldSpecified;
            }
            set {
                this.mYBLOCK_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MYCON_FLAG {
            get {
                return this.mYCON_FLAGField;
            }
            set {
                this.mYCON_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MYCON_FLAGSpecified {
            get {
                return this.mYCON_FLAGFieldSpecified;
            }
            set {
                this.mYCON_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MYCOM_FLAG {
            get {
                return this.mYCOM_FLAGField;
            }
            set {
                this.mYCOM_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MYCOM_FLAGSpecified {
            get {
                return this.mYCOM_FLAGFieldSpecified;
            }
            set {
                this.mYCOM_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MYTEAM_FLAG {
            get {
                return this.mYTEAM_FLAGField;
            }
            set {
                this.mYTEAM_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MYTEAM_FLAGSpecified {
            get {
                return this.mYTEAM_FLAGFieldSpecified;
            }
            set {
                this.mYTEAM_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int USING_FLAG {
            get {
                return this.uSING_FLAGField;
            }
            set {
                this.uSING_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_FLAGSpecified {
            get {
                return this.uSING_FLAGFieldSpecified;
            }
            set {
                this.uSING_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int AUTH_LEVEL {
            get {
                return this.aUTH_LEVELField;
            }
            set {
                this.aUTH_LEVELField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AUTH_LEVELSpecified {
            get {
                return this.aUTH_LEVELFieldSpecified;
            }
            set {
                this.aUTH_LEVELFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMO {
            get {
                return this.mEMOField;
            }
            set {
                this.mEMOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sSysAuthMainDBCompletedEventHandler(object sender, sSysAuthMainDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sSysAuthMainDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sSysAuthMainDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataSysAuthMainDB[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSysAuthMainDB[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mSysAuthMainDBCompletedEventHandler(object sender, mSysAuthMainDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mSysAuthMainDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mSysAuthMainDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void exSysAuthMainDBCompletedEventHandler(object sender, exSysAuthMainDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exSysAuthMainDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exSysAuthMainDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void aSysAuthMainDBCompletedEventHandler(object sender, aSysAuthMainDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aSysAuthMainDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aSysAuthMainDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591