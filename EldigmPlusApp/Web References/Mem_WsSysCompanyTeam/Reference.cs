//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace EldigmPlusApp.Mem_WsSysCompanyTeam {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWsSysCompanyTeam", Namespace="http://tempuri.org/")]
    public partial class WsSysCompanyTeam : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback constCmbOperationCompleted;
        
        private System.Threading.SendOrPostCallback cotype_CmbOperationCompleted;
        
        private System.Threading.SendOrPostCallback constCmb2OperationCompleted;
        
        private System.Threading.SendOrPostCallback cotype_Cmb2OperationCompleted;
        
        private System.Threading.SendOrPostCallback sCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback mCompanyMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback mCompanyMemcoOperationCompleted;
        
        private System.Threading.SendOrPostCallback mCompanyMemcoSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback aCompanyMemcoSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback aCompanyProOperationCompleted;
        
        private System.Threading.SendOrPostCallback mConpanyMainLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback mCompanySiteLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback companyCmbOperationCompleted;
        
        private System.Threading.SendOrPostCallback sTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback mTeamMemcoOperationCompleted;
        
        private System.Threading.SendOrPostCallback aTeamProOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsSysCompanyTeam() {
            this.Url = global::EldigmPlusApp.Properties.Settings.Default.EldigmPlusApp_Mem_WsSysCompanyTeam_WsSysCompanyTeam;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event constCmbCompletedEventHandler constCmbCompleted;
        
        /// <remarks/>
        public event cotype_CmbCompletedEventHandler cotype_CmbCompleted;
        
        /// <remarks/>
        public event constCmb2CompletedEventHandler constCmb2Completed;
        
        /// <remarks/>
        public event cotype_Cmb2CompletedEventHandler cotype_Cmb2Completed;
        
        /// <remarks/>
        public event sCompanyCompletedEventHandler sCompanyCompleted;
        
        /// <remarks/>
        public event mCompanyMainCompletedEventHandler mCompanyMainCompleted;
        
        /// <remarks/>
        public event mCompanyMemcoCompletedEventHandler mCompanyMemcoCompleted;
        
        /// <remarks/>
        public event mCompanyMemcoSiteCompletedEventHandler mCompanyMemcoSiteCompleted;
        
        /// <remarks/>
        public event aCompanyMemcoSiteCompletedEventHandler aCompanyMemcoSiteCompleted;
        
        /// <remarks/>
        public event aCompanyProCompletedEventHandler aCompanyProCompleted;
        
        /// <remarks/>
        public event mConpanyMainLogCompletedEventHandler mConpanyMainLogCompleted;
        
        /// <remarks/>
        public event mCompanySiteLogCompletedEventHandler mCompanySiteLogCompleted;
        
        /// <remarks/>
        public event companyCmbCompletedEventHandler companyCmbCompleted;
        
        /// <remarks/>
        public event sTeamCompletedEventHandler sTeamCompleted;
        
        /// <remarks/>
        public event mTeamMemcoCompletedEventHandler mTeamMemcoCompleted;
        
        /// <remarks/>
        public event aTeamProCompletedEventHandler aTeamProCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/constCmb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string constCmb([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataConstCmb[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("constCmb", new object[] {
                        pSiteCd});
            reList = ((DataConstCmb[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void constCmbAsync(string pSiteCd) {
            this.constCmbAsync(pSiteCd, null);
        }
        
        /// <remarks/>
        public void constCmbAsync(string pSiteCd, object userState) {
            if ((this.constCmbOperationCompleted == null)) {
                this.constCmbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconstCmbOperationCompleted);
            }
            this.InvokeAsync("constCmb", new object[] {
                        pSiteCd}, this.constCmbOperationCompleted, userState);
        }
        
        private void OnconstCmbOperationCompleted(object arg) {
            if ((this.constCmbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.constCmbCompleted(this, new constCmbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/cotype_Cmb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cotype_Cmb([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataCotypeCmb[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("cotype_Cmb", new object[0]);
            reList = ((DataCotypeCmb[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cotype_CmbAsync() {
            this.cotype_CmbAsync(null);
        }
        
        /// <remarks/>
        public void cotype_CmbAsync(object userState) {
            if ((this.cotype_CmbOperationCompleted == null)) {
                this.cotype_CmbOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncotype_CmbOperationCompleted);
            }
            this.InvokeAsync("cotype_Cmb", new object[0], this.cotype_CmbOperationCompleted, userState);
        }
        
        private void Oncotype_CmbOperationCompleted(object arg) {
            if ((this.cotype_CmbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cotype_CmbCompleted(this, new cotype_CmbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/constCmb2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string constCmb2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataConstCmb2[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("constCmb2", new object[] {
                        pSiteCd});
            reList = ((DataConstCmb2[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void constCmb2Async(string pSiteCd) {
            this.constCmb2Async(pSiteCd, null);
        }
        
        /// <remarks/>
        public void constCmb2Async(string pSiteCd, object userState) {
            if ((this.constCmb2OperationCompleted == null)) {
                this.constCmb2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnconstCmb2OperationCompleted);
            }
            this.InvokeAsync("constCmb2", new object[] {
                        pSiteCd}, this.constCmb2OperationCompleted, userState);
        }
        
        private void OnconstCmb2OperationCompleted(object arg) {
            if ((this.constCmb2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.constCmb2Completed(this, new constCmb2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/cotype_Cmb2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cotype_Cmb2([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataCotypeCmb2[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("cotype_Cmb2", new object[0]);
            reList = ((DataCotypeCmb2[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cotype_Cmb2Async() {
            this.cotype_Cmb2Async(null);
        }
        
        /// <remarks/>
        public void cotype_Cmb2Async(object userState) {
            if ((this.cotype_Cmb2OperationCompleted == null)) {
                this.cotype_Cmb2OperationCompleted = new System.Threading.SendOrPostCallback(this.Oncotype_Cmb2OperationCompleted);
            }
            this.InvokeAsync("cotype_Cmb2", new object[0], this.cotype_Cmb2OperationCompleted, userState);
        }
        
        private void Oncotype_Cmb2OperationCompleted(object arg) {
            if ((this.cotype_Cmb2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cotype_Cmb2Completed(this, new cotype_Cmb2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/sCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sCompany([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoNm, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataCompany[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sCompany", new object[] {
                        pSiteCd,
                        pUsingFlag,
                        pCoNm});
            reList = ((DataCompany[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sCompanyAsync(string pSiteCd, string pUsingFlag, string pCoNm) {
            this.sCompanyAsync(pSiteCd, pUsingFlag, pCoNm, null);
        }
        
        /// <remarks/>
        public void sCompanyAsync(string pSiteCd, string pUsingFlag, string pCoNm, object userState) {
            if ((this.sCompanyOperationCompleted == null)) {
                this.sCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsCompanyOperationCompleted);
            }
            this.InvokeAsync("sCompany", new object[] {
                        pSiteCd,
                        pUsingFlag,
                        pCoNm}, this.sCompanyOperationCompleted, userState);
        }
        
        private void OnsCompanyOperationCompleted(object arg) {
            if ((this.sCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sCompanyCompleted(this, new sCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/mCompanyMain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mCompanyMain([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBizNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pConstCcd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoTypeScd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOwnerNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTel, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAddr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mCompanyMain", new object[] {
                        pCoCd,
                        pCoNm,
                        pBizNo,
                        pConstCcd,
                        pCoTypeScd,
                        pOwnerNm,
                        pTel,
                        pAddr});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mCompanyMainAsync(string pCoCd, string pCoNm, string pBizNo, string pConstCcd, string pCoTypeScd, string pOwnerNm, string pTel, string pAddr) {
            this.mCompanyMainAsync(pCoCd, pCoNm, pBizNo, pConstCcd, pCoTypeScd, pOwnerNm, pTel, pAddr, null);
        }
        
        /// <remarks/>
        public void mCompanyMainAsync(string pCoCd, string pCoNm, string pBizNo, string pConstCcd, string pCoTypeScd, string pOwnerNm, string pTel, string pAddr, object userState) {
            if ((this.mCompanyMainOperationCompleted == null)) {
                this.mCompanyMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmCompanyMainOperationCompleted);
            }
            this.InvokeAsync("mCompanyMain", new object[] {
                        pCoCd,
                        pCoNm,
                        pBizNo,
                        pConstCcd,
                        pCoTypeScd,
                        pOwnerNm,
                        pTel,
                        pAddr}, this.mCompanyMainOperationCompleted, userState);
        }
        
        private void OnmCompanyMainOperationCompleted(object arg) {
            if ((this.mCompanyMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mCompanyMainCompleted(this, new mCompanyMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/mCompanyMemco", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mCompanyMemco([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pHeadcoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pConstCcd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoTypeScd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mCompanyMemco", new object[] {
                        pSiteCd,
                        pCoCd,
                        pCoNm,
                        pHeadcoCd,
                        pConstCcd,
                        pCoTypeScd,
                        pSortNo});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mCompanyMemcoAsync(string pSiteCd, string pCoCd, string pCoNm, string pHeadcoCd, string pConstCcd, string pCoTypeScd, string pSortNo) {
            this.mCompanyMemcoAsync(pSiteCd, pCoCd, pCoNm, pHeadcoCd, pConstCcd, pCoTypeScd, pSortNo, null);
        }
        
        /// <remarks/>
        public void mCompanyMemcoAsync(string pSiteCd, string pCoCd, string pCoNm, string pHeadcoCd, string pConstCcd, string pCoTypeScd, string pSortNo, object userState) {
            if ((this.mCompanyMemcoOperationCompleted == null)) {
                this.mCompanyMemcoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmCompanyMemcoOperationCompleted);
            }
            this.InvokeAsync("mCompanyMemco", new object[] {
                        pSiteCd,
                        pCoCd,
                        pCoNm,
                        pHeadcoCd,
                        pConstCcd,
                        pCoTypeScd,
                        pSortNo}, this.mCompanyMemcoOperationCompleted, userState);
        }
        
        private void OnmCompanyMemcoOperationCompleted(object arg) {
            if ((this.mCompanyMemcoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mCompanyMemcoCompleted(this, new mCompanyMemcoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/mCompanyMemcoSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mCompanyMemcoSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pStartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pEndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mCompanyMemcoSite", new object[] {
                        pSiteCd,
                        pCoCd,
                        pStartDate,
                        pEndDate,
                        pUsingFlag,
                        pSortNo,
                        pMemo});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mCompanyMemcoSiteAsync(string pSiteCd, string pCoCd, string pStartDate, string pEndDate, string pUsingFlag, string pSortNo, string pMemo) {
            this.mCompanyMemcoSiteAsync(pSiteCd, pCoCd, pStartDate, pEndDate, pUsingFlag, pSortNo, pMemo, null);
        }
        
        /// <remarks/>
        public void mCompanyMemcoSiteAsync(string pSiteCd, string pCoCd, string pStartDate, string pEndDate, string pUsingFlag, string pSortNo, string pMemo, object userState) {
            if ((this.mCompanyMemcoSiteOperationCompleted == null)) {
                this.mCompanyMemcoSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmCompanyMemcoSiteOperationCompleted);
            }
            this.InvokeAsync("mCompanyMemcoSite", new object[] {
                        pSiteCd,
                        pCoCd,
                        pStartDate,
                        pEndDate,
                        pUsingFlag,
                        pSortNo,
                        pMemo}, this.mCompanyMemcoSiteOperationCompleted, userState);
        }
        
        private void OnmCompanyMemcoSiteOperationCompleted(object arg) {
            if ((this.mCompanyMemcoSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mCompanyMemcoSiteCompleted(this, new mCompanyMemcoSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/aCompanyMemcoSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string aCompanyMemcoSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pStartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pEndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pInputId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("aCompanyMemcoSite", new object[] {
                        pSiteCd,
                        pCoCd,
                        pStartDate,
                        pEndDate,
                        pUsingFlag,
                        pSortNo,
                        pMemo,
                        pInputId});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aCompanyMemcoSiteAsync(string pSiteCd, string pCoCd, string pStartDate, string pEndDate, string pUsingFlag, string pSortNo, string pMemo, string pInputId) {
            this.aCompanyMemcoSiteAsync(pSiteCd, pCoCd, pStartDate, pEndDate, pUsingFlag, pSortNo, pMemo, pInputId, null);
        }
        
        /// <remarks/>
        public void aCompanyMemcoSiteAsync(string pSiteCd, string pCoCd, string pStartDate, string pEndDate, string pUsingFlag, string pSortNo, string pMemo, string pInputId, object userState) {
            if ((this.aCompanyMemcoSiteOperationCompleted == null)) {
                this.aCompanyMemcoSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaCompanyMemcoSiteOperationCompleted);
            }
            this.InvokeAsync("aCompanyMemcoSite", new object[] {
                        pSiteCd,
                        pCoCd,
                        pStartDate,
                        pEndDate,
                        pUsingFlag,
                        pSortNo,
                        pMemo,
                        pInputId}, this.aCompanyMemcoSiteOperationCompleted, userState);
        }
        
        private void OnaCompanyMemcoSiteOperationCompleted(object arg) {
            if ((this.aCompanyMemcoSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aCompanyMemcoSiteCompleted(this, new aCompanyMemcoSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/aCompanyPro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string aCompanyPro([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDbNm, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] param, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("aCompanyPro", new object[] {
                        pDbNm,
                        param});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aCompanyProAsync(string pDbNm, string[] param) {
            this.aCompanyProAsync(pDbNm, param, null);
        }
        
        /// <remarks/>
        public void aCompanyProAsync(string pDbNm, string[] param, object userState) {
            if ((this.aCompanyProOperationCompleted == null)) {
                this.aCompanyProOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaCompanyProOperationCompleted);
            }
            this.InvokeAsync("aCompanyPro", new object[] {
                        pDbNm,
                        param}, this.aCompanyProOperationCompleted, userState);
        }
        
        private void OnaCompanyProOperationCompleted(object arg) {
            if ((this.aCompanyProCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aCompanyProCompleted(this, new aCompanyProCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/mConpanyMainLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mConpanyMainLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pBizNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pConstCcd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoTypeScd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pOwnerNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTel, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pAddr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingCnt, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pInputId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mConpanyMainLog", new object[] {
                        pCoCd,
                        pCoNm,
                        pBizNo,
                        pConstCcd,
                        pCoTypeScd,
                        pOwnerNm,
                        pTel,
                        pAddr,
                        pUsingCnt,
                        pInputId});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mConpanyMainLogAsync(string pCoCd, string pCoNm, string pBizNo, string pConstCcd, string pCoTypeScd, string pOwnerNm, string pTel, string pAddr, string pUsingCnt, string pInputId) {
            this.mConpanyMainLogAsync(pCoCd, pCoNm, pBizNo, pConstCcd, pCoTypeScd, pOwnerNm, pTel, pAddr, pUsingCnt, pInputId, null);
        }
        
        /// <remarks/>
        public void mConpanyMainLogAsync(string pCoCd, string pCoNm, string pBizNo, string pConstCcd, string pCoTypeScd, string pOwnerNm, string pTel, string pAddr, string pUsingCnt, string pInputId, object userState) {
            if ((this.mConpanyMainLogOperationCompleted == null)) {
                this.mConpanyMainLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmConpanyMainLogOperationCompleted);
            }
            this.InvokeAsync("mConpanyMainLog", new object[] {
                        pCoCd,
                        pCoNm,
                        pBizNo,
                        pConstCcd,
                        pCoTypeScd,
                        pOwnerNm,
                        pTel,
                        pAddr,
                        pUsingCnt,
                        pInputId}, this.mConpanyMainLogOperationCompleted, userState);
        }
        
        private void OnmConpanyMainLogOperationCompleted(object arg) {
            if ((this.mConpanyMainLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mConpanyMainLogCompleted(this, new mConpanyMainLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/mCompanySiteLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mCompanySiteLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pConstCcd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoTypeScd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pStartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pEndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pInputId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mCompanySiteLog", new object[] {
                        pCoCd,
                        pSiteCd,
                        pCoNm,
                        pConstCcd,
                        pCoTypeScd,
                        pStartDate,
                        pEndDate,
                        pUsingFlag,
                        pSortNo,
                        pMemo,
                        pInputId});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mCompanySiteLogAsync(string pCoCd, string pSiteCd, string pCoNm, string pConstCcd, string pCoTypeScd, string pStartDate, string pEndDate, string pUsingFlag, string pSortNo, string pMemo, string pInputId) {
            this.mCompanySiteLogAsync(pCoCd, pSiteCd, pCoNm, pConstCcd, pCoTypeScd, pStartDate, pEndDate, pUsingFlag, pSortNo, pMemo, pInputId, null);
        }
        
        /// <remarks/>
        public void mCompanySiteLogAsync(string pCoCd, string pSiteCd, string pCoNm, string pConstCcd, string pCoTypeScd, string pStartDate, string pEndDate, string pUsingFlag, string pSortNo, string pMemo, string pInputId, object userState) {
            if ((this.mCompanySiteLogOperationCompleted == null)) {
                this.mCompanySiteLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmCompanySiteLogOperationCompleted);
            }
            this.InvokeAsync("mCompanySiteLog", new object[] {
                        pCoCd,
                        pSiteCd,
                        pCoNm,
                        pConstCcd,
                        pCoTypeScd,
                        pStartDate,
                        pEndDate,
                        pUsingFlag,
                        pSortNo,
                        pMemo,
                        pInputId}, this.mCompanySiteLogOperationCompleted, userState);
        }
        
        private void OnmCompanySiteLogOperationCompleted(object arg) {
            if ((this.mCompanySiteLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mCompanySiteLogCompleted(this, new mCompanySiteLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/companyCmb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string companyCmb([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataCompanyCmb[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("companyCmb", new object[] {
                        pSiteCd});
            reList = ((DataCompanyCmb[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void companyCmbAsync(string pSiteCd) {
            this.companyCmbAsync(pSiteCd, null);
        }
        
        /// <remarks/>
        public void companyCmbAsync(string pSiteCd, object userState) {
            if ((this.companyCmbOperationCompleted == null)) {
                this.companyCmbOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompanyCmbOperationCompleted);
            }
            this.InvokeAsync("companyCmb", new object[] {
                        pSiteCd}, this.companyCmbOperationCompleted, userState);
        }
        
        private void OncompanyCmbOperationCompleted(object arg) {
            if ((this.companyCmbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.companyCmbCompleted(this, new companyCmbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/sTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sTeam([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pCoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTeamNm, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
            "m")] out DataTeam[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sTeam", new object[] {
                        pSiteCd,
                        pCoCd,
                        pUsingFlag,
                        pTeamNm});
            reList = ((DataTeam[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sTeamAsync(string pSiteCd, string pCoCd, string pUsingFlag, string pTeamNm) {
            this.sTeamAsync(pSiteCd, pCoCd, pUsingFlag, pTeamNm, null);
        }
        
        /// <remarks/>
        public void sTeamAsync(string pSiteCd, string pCoCd, string pUsingFlag, string pTeamNm, object userState) {
            if ((this.sTeamOperationCompleted == null)) {
                this.sTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsTeamOperationCompleted);
            }
            this.InvokeAsync("sTeam", new object[] {
                        pSiteCd,
                        pCoCd,
                        pUsingFlag,
                        pTeamNm}, this.sTeamOperationCompleted, userState);
        }
        
        private void OnsTeamOperationCompleted(object arg) {
            if ((this.sTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sTeamCompleted(this, new sTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/mTeamMemco", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mTeamMemco([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTeamCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTeamNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFalg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mTeamMemco", new object[] {
                        pSiteCd,
                        pTeamCd,
                        pTeamNm,
                        pUsingFalg,
                        pSortNo,
                        pMemo});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mTeamMemcoAsync(string pSiteCd, string pTeamCd, string pTeamNm, string pUsingFalg, string pSortNo, string pMemo) {
            this.mTeamMemcoAsync(pSiteCd, pTeamCd, pTeamNm, pUsingFalg, pSortNo, pMemo, null);
        }
        
        /// <remarks/>
        public void mTeamMemcoAsync(string pSiteCd, string pTeamCd, string pTeamNm, string pUsingFalg, string pSortNo, string pMemo, object userState) {
            if ((this.mTeamMemcoOperationCompleted == null)) {
                this.mTeamMemcoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmTeamMemcoOperationCompleted);
            }
            this.InvokeAsync("mTeamMemco", new object[] {
                        pSiteCd,
                        pTeamCd,
                        pTeamNm,
                        pUsingFalg,
                        pSortNo,
                        pMemo}, this.mTeamMemcoOperationCompleted, userState);
        }
        
        private void OnmTeamMemcoOperationCompleted(object arg) {
            if ((this.mTeamMemcoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mTeamMemcoCompleted(this, new mTeamMemcoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsSysCompanyTeam/aTeamPro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string aTeamPro([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDbNm, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] param, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("aTeamPro", new object[] {
                        pDbNm,
                        param});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aTeamProAsync(string pDbNm, string[] param) {
            this.aTeamProAsync(pDbNm, param, null);
        }
        
        /// <remarks/>
        public void aTeamProAsync(string pDbNm, string[] param, object userState) {
            if ((this.aTeamProOperationCompleted == null)) {
                this.aTeamProOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaTeamProOperationCompleted);
            }
            this.InvokeAsync("aTeamPro", new object[] {
                        pDbNm,
                        param}, this.aTeamProOperationCompleted, userState);
        }
        
        private void OnaTeamProOperationCompleted(object arg) {
            if ((this.aTeamProCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aTeamProCompleted(this, new aTeamProCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataConstCmb {
        
        private int vALUEField;
        
        private bool vALUEFieldSpecified;
        
        private string tEXTField;
        
        /// <remarks/>
        public int VALUE {
            get {
                return this.vALUEField;
            }
            set {
                this.vALUEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VALUESpecified {
            get {
                return this.vALUEFieldSpecified;
            }
            set {
                this.vALUEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEXT {
            get {
                return this.tEXTField;
            }
            set {
                this.tEXTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataTeam {
        
        private int tEAM_CDField;
        
        private bool tEAM_CDFieldSpecified;
        
        private string tEAM_NMField;
        
        private int uSING_FLAGField;
        
        private bool uSING_FLAGFieldSpecified;
        
        private int sORT_NOField;
        
        private bool sORT_NOFieldSpecified;
        
        private string mEMOField;
        
        /// <remarks/>
        public int TEAM_CD {
            get {
                return this.tEAM_CDField;
            }
            set {
                this.tEAM_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TEAM_CDSpecified {
            get {
                return this.tEAM_CDFieldSpecified;
            }
            set {
                this.tEAM_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEAM_NM {
            get {
                return this.tEAM_NMField;
            }
            set {
                this.tEAM_NMField = value;
            }
        }
        
        /// <remarks/>
        public int USING_FLAG {
            get {
                return this.uSING_FLAGField;
            }
            set {
                this.uSING_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_FLAGSpecified {
            get {
                return this.uSING_FLAGFieldSpecified;
            }
            set {
                this.uSING_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SORT_NO {
            get {
                return this.sORT_NOField;
            }
            set {
                this.sORT_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SORT_NOSpecified {
            get {
                return this.sORT_NOFieldSpecified;
            }
            set {
                this.sORT_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMO {
            get {
                return this.mEMOField;
            }
            set {
                this.mEMOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataCompanyCmb {
        
        private int cO_CDField;
        
        private bool cO_CDFieldSpecified;
        
        private string cO_NMField;
        
        /// <remarks/>
        public int CO_CD {
            get {
                return this.cO_CDField;
            }
            set {
                this.cO_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CO_CDSpecified {
            get {
                return this.cO_CDFieldSpecified;
            }
            set {
                this.cO_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CO_NM {
            get {
                return this.cO_NMField;
            }
            set {
                this.cO_NMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataCompany {
        
        private int cO_CDField;
        
        private bool cO_CDFieldSpecified;
        
        private string cO_NMField;
        
        private int uSING_FLAGField;
        
        private bool uSING_FLAGFieldSpecified;
        
        private string hEADCO_CDField;
        
        private int cONST_CCDField;
        
        private bool cONST_CCDFieldSpecified;
        
        private string cO_TYPE_SCDField;
        
        private int sITE_CDField;
        
        private bool sITE_CDFieldSpecified;
        
        private int sTART_DATEField;
        
        private bool sTART_DATEFieldSpecified;
        
        private int eND_DATEField;
        
        private bool eND_DATEFieldSpecified;
        
        private string bIZ_NOField;
        
        private string oWNER_NMField;
        
        private string tELField;
        
        private string aDDRField;
        
        private int uSING_CNTField;
        
        private bool uSING_CNTFieldSpecified;
        
        private int sORT_NOField;
        
        private bool sORT_NOFieldSpecified;
        
        private string mEMOField;
        
        /// <remarks/>
        public int CO_CD {
            get {
                return this.cO_CDField;
            }
            set {
                this.cO_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CO_CDSpecified {
            get {
                return this.cO_CDFieldSpecified;
            }
            set {
                this.cO_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CO_NM {
            get {
                return this.cO_NMField;
            }
            set {
                this.cO_NMField = value;
            }
        }
        
        /// <remarks/>
        public int USING_FLAG {
            get {
                return this.uSING_FLAGField;
            }
            set {
                this.uSING_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_FLAGSpecified {
            get {
                return this.uSING_FLAGFieldSpecified;
            }
            set {
                this.uSING_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HEADCO_CD {
            get {
                return this.hEADCO_CDField;
            }
            set {
                this.hEADCO_CDField = value;
            }
        }
        
        /// <remarks/>
        public int CONST_CCD {
            get {
                return this.cONST_CCDField;
            }
            set {
                this.cONST_CCDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CONST_CCDSpecified {
            get {
                return this.cONST_CCDFieldSpecified;
            }
            set {
                this.cONST_CCDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CO_TYPE_SCD {
            get {
                return this.cO_TYPE_SCDField;
            }
            set {
                this.cO_TYPE_SCDField = value;
            }
        }
        
        /// <remarks/>
        public int SITE_CD {
            get {
                return this.sITE_CDField;
            }
            set {
                this.sITE_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SITE_CDSpecified {
            get {
                return this.sITE_CDFieldSpecified;
            }
            set {
                this.sITE_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int START_DATE {
            get {
                return this.sTART_DATEField;
            }
            set {
                this.sTART_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool START_DATESpecified {
            get {
                return this.sTART_DATEFieldSpecified;
            }
            set {
                this.sTART_DATEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int END_DATE {
            get {
                return this.eND_DATEField;
            }
            set {
                this.eND_DATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool END_DATESpecified {
            get {
                return this.eND_DATEFieldSpecified;
            }
            set {
                this.eND_DATEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BIZ_NO {
            get {
                return this.bIZ_NOField;
            }
            set {
                this.bIZ_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OWNER_NM {
            get {
                return this.oWNER_NMField;
            }
            set {
                this.oWNER_NMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEL {
            get {
                return this.tELField;
            }
            set {
                this.tELField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ADDR {
            get {
                return this.aDDRField;
            }
            set {
                this.aDDRField = value;
            }
        }
        
        /// <remarks/>
        public int USING_CNT {
            get {
                return this.uSING_CNTField;
            }
            set {
                this.uSING_CNTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_CNTSpecified {
            get {
                return this.uSING_CNTFieldSpecified;
            }
            set {
                this.uSING_CNTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SORT_NO {
            get {
                return this.sORT_NOField;
            }
            set {
                this.sORT_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SORT_NOSpecified {
            get {
                return this.sORT_NOFieldSpecified;
            }
            set {
                this.sORT_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMO {
            get {
                return this.mEMOField;
            }
            set {
                this.mEMOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataCotypeCmb2 {
        
        private string sCODEField;
        
        private string sCODE_NMField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SCODE {
            get {
                return this.sCODEField;
            }
            set {
                this.sCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SCODE_NM {
            get {
                return this.sCODE_NMField;
            }
            set {
                this.sCODE_NMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataConstCmb2 {
        
        private int cCODEField;
        
        private bool cCODEFieldSpecified;
        
        private string cCODE_NMField;
        
        /// <remarks/>
        public int CCODE {
            get {
                return this.cCODEField;
            }
            set {
                this.cCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CCODESpecified {
            get {
                return this.cCODEFieldSpecified;
            }
            set {
                this.cCODEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CCODE_NM {
            get {
                return this.cCODE_NMField;
            }
            set {
                this.cCODE_NMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Memco.WebSvc.Sys.CompanyTea" +
        "m")]
    public partial class DataCotypeCmb {
        
        private string vALUEField;
        
        private string tEXTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VALUE {
            get {
                return this.vALUEField;
            }
            set {
                this.vALUEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEXT {
            get {
                return this.tEXTField;
            }
            set {
                this.tEXTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void constCmbCompletedEventHandler(object sender, constCmbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class constCmbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal constCmbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataConstCmb[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataConstCmb[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cotype_CmbCompletedEventHandler(object sender, cotype_CmbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cotype_CmbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cotype_CmbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCotypeCmb[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCotypeCmb[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void constCmb2CompletedEventHandler(object sender, constCmb2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class constCmb2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal constCmb2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataConstCmb2[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataConstCmb2[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cotype_Cmb2CompletedEventHandler(object sender, cotype_Cmb2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cotype_Cmb2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cotype_Cmb2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCotypeCmb2[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCotypeCmb2[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sCompanyCompletedEventHandler(object sender, sCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCompany[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCompany[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mCompanyMainCompletedEventHandler(object sender, mCompanyMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mCompanyMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mCompanyMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mCompanyMemcoCompletedEventHandler(object sender, mCompanyMemcoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mCompanyMemcoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mCompanyMemcoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mCompanyMemcoSiteCompletedEventHandler(object sender, mCompanyMemcoSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mCompanyMemcoSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mCompanyMemcoSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void aCompanyMemcoSiteCompletedEventHandler(object sender, aCompanyMemcoSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aCompanyMemcoSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aCompanyMemcoSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void aCompanyProCompletedEventHandler(object sender, aCompanyProCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aCompanyProCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aCompanyProCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mConpanyMainLogCompletedEventHandler(object sender, mConpanyMainLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mConpanyMainLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mConpanyMainLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mCompanySiteLogCompletedEventHandler(object sender, mCompanySiteLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mCompanySiteLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mCompanySiteLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void companyCmbCompletedEventHandler(object sender, companyCmbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class companyCmbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal companyCmbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCompanyCmb[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCompanyCmb[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sTeamCompletedEventHandler(object sender, sTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataTeam[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataTeam[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mTeamMemcoCompletedEventHandler(object sender, mTeamMemcoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mTeamMemcoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mTeamMemcoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void aTeamProCompletedEventHandler(object sender, aTeamProCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aTeamProCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aTeamProCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591