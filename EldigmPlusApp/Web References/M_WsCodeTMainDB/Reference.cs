//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace EldigmPlusApp.M_WsCodeTMainDB {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWsCodeTMainDB", Namespace="http://tempuri.org/")]
    public partial class WsCodeTMainDB : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sSysCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback sCodeTTreeViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback sCodeTOperationCompleted;
        
        private System.Threading.SendOrPostCallback sCodeTSubTreeViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback sCodeTSubOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsCodeTMainDB() {
            this.Url = global::EldigmPlusApp.Properties.Settings.Default.EldigmPlusApp_M_WsCodeTMainDB_WsCodeTMainDB;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sSysCodeCompletedEventHandler sSysCodeCompleted;
        
        /// <remarks/>
        public event sCodeTTreeViewCompletedEventHandler sCodeTTreeViewCompleted;
        
        /// <remarks/>
        public event sCodeTCompletedEventHandler sCodeTCompleted;
        
        /// <remarks/>
        public event sCodeTSubTreeViewCompletedEventHandler sCodeTSubTreeViewCompleted;
        
        /// <remarks/>
        public event sCodeTSubCompletedEventHandler sCodeTSubCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsCodeTMainDB/sSysCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sSysCode([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")] out DataSysCode[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sSysCode", new object[0]);
            reList = ((DataSysCode[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sSysCodeAsync() {
            this.sSysCodeAsync(null);
        }
        
        /// <remarks/>
        public void sSysCodeAsync(object userState) {
            if ((this.sSysCodeOperationCompleted == null)) {
                this.sSysCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsSysCodeOperationCompleted);
            }
            this.InvokeAsync("sSysCode", new object[0], this.sSysCodeOperationCompleted, userState);
        }
        
        private void OnsSysCodeOperationCompleted(object arg) {
            if ((this.sSysCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sSysCodeCompleted(this, new sSysCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsCodeTMainDB/sCodeTTreeView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sCodeTTreeView([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pScode, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")] out DataCodeT[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sCodeTTreeView", new object[] {
                        pScode});
            reList = ((DataCodeT[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sCodeTTreeViewAsync(string pScode) {
            this.sCodeTTreeViewAsync(pScode, null);
        }
        
        /// <remarks/>
        public void sCodeTTreeViewAsync(string pScode, object userState) {
            if ((this.sCodeTTreeViewOperationCompleted == null)) {
                this.sCodeTTreeViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsCodeTTreeViewOperationCompleted);
            }
            this.InvokeAsync("sCodeTTreeView", new object[] {
                        pScode}, this.sCodeTTreeViewOperationCompleted, userState);
        }
        
        private void OnsCodeTTreeViewOperationCompleted(object arg) {
            if ((this.sCodeTTreeViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sCodeTTreeViewCompleted(this, new sCodeTTreeViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsCodeTMainDB/sCodeT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sCodeT([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pScode, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")] out DataCodeT[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sCodeT", new object[] {
                        pScode});
            reList = ((DataCodeT[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sCodeTAsync(string pScode) {
            this.sCodeTAsync(pScode, null);
        }
        
        /// <remarks/>
        public void sCodeTAsync(string pScode, object userState) {
            if ((this.sCodeTOperationCompleted == null)) {
                this.sCodeTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsCodeTOperationCompleted);
            }
            this.InvokeAsync("sCodeT", new object[] {
                        pScode}, this.sCodeTOperationCompleted, userState);
        }
        
        private void OnsCodeTOperationCompleted(object arg) {
            if ((this.sCodeTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sCodeTCompleted(this, new sCodeTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsCodeTMainDB/sCodeTSubTreeView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sCodeTSubTreeView([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTcode, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")] out DataCodeTSub[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sCodeTSubTreeView", new object[] {
                        pTcode});
            reList = ((DataCodeTSub[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sCodeTSubTreeViewAsync(string pTcode) {
            this.sCodeTSubTreeViewAsync(pTcode, null);
        }
        
        /// <remarks/>
        public void sCodeTSubTreeViewAsync(string pTcode, object userState) {
            if ((this.sCodeTSubTreeViewOperationCompleted == null)) {
                this.sCodeTSubTreeViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsCodeTSubTreeViewOperationCompleted);
            }
            this.InvokeAsync("sCodeTSubTreeView", new object[] {
                        pTcode}, this.sCodeTSubTreeViewOperationCompleted, userState);
        }
        
        private void OnsCodeTSubTreeViewOperationCompleted(object arg) {
            if ((this.sCodeTSubTreeViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sCodeTSubTreeViewCompleted(this, new sCodeTSubTreeViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsCodeTMainDB/sCodeTSub", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sCodeTSub([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pTcode, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")] out DataCodeTSub[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sCodeTSub", new object[] {
                        pTcode});
            reList = ((DataCodeTSub[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sCodeTSubAsync(string pTcode) {
            this.sCodeTSubAsync(pTcode, null);
        }
        
        /// <remarks/>
        public void sCodeTSubAsync(string pTcode, object userState) {
            if ((this.sCodeTSubOperationCompleted == null)) {
                this.sCodeTSubOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsCodeTSubOperationCompleted);
            }
            this.InvokeAsync("sCodeTSub", new object[] {
                        pTcode}, this.sCodeTSubOperationCompleted, userState);
        }
        
        private void OnsCodeTSubOperationCompleted(object arg) {
            if ((this.sCodeTSubCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sCodeTSubCompleted(this, new sCodeTSubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")]
    public partial class DataSysCode {
        
        private string sCODEField;
        
        private string sCODE_NMField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SCODE {
            get {
                return this.sCODEField;
            }
            set {
                this.sCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SCODE_NM {
            get {
                return this.sCODE_NMField;
            }
            set {
                this.sCODE_NMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")]
    public partial class DataCodeTSub {
        
        private int tSCODEField;
        
        private bool tSCODEFieldSpecified;
        
        private string tCODEField;
        
        private string tSCODE_NMField;
        
        private int uSING_CNTField;
        
        private bool uSING_CNTFieldSpecified;
        
        /// <remarks/>
        public int TSCODE {
            get {
                return this.tSCODEField;
            }
            set {
                this.tSCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TSCODESpecified {
            get {
                return this.tSCODEFieldSpecified;
            }
            set {
                this.tSCODEFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TCODE {
            get {
                return this.tCODEField;
            }
            set {
                this.tCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TSCODE_NM {
            get {
                return this.tSCODE_NMField;
            }
            set {
                this.tSCODE_NMField = value;
            }
        }
        
        /// <remarks/>
        public int USING_CNT {
            get {
                return this.uSING_CNTField;
            }
            set {
                this.uSING_CNTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_CNTSpecified {
            get {
                return this.uSING_CNTFieldSpecified;
            }
            set {
                this.uSING_CNTFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.CodeT")]
    public partial class DataCodeT {
        
        private string tCODEField;
        
        private string tTYPE_SCDField;
        
        private string tCODE_NMField;
        
        private int lIST_FLAGField;
        
        private bool lIST_FLAGFieldSpecified;
        
        private int rEQUIRED_FLAGField;
        
        private bool rEQUIRED_FLAGFieldSpecified;
        
        private int nUMERIC_FLAGField;
        
        private bool nUMERIC_FLAGFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TCODE {
            get {
                return this.tCODEField;
            }
            set {
                this.tCODEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TTYPE_SCD {
            get {
                return this.tTYPE_SCDField;
            }
            set {
                this.tTYPE_SCDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TCODE_NM {
            get {
                return this.tCODE_NMField;
            }
            set {
                this.tCODE_NMField = value;
            }
        }
        
        /// <remarks/>
        public int LIST_FLAG {
            get {
                return this.lIST_FLAGField;
            }
            set {
                this.lIST_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LIST_FLAGSpecified {
            get {
                return this.lIST_FLAGFieldSpecified;
            }
            set {
                this.lIST_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int REQUIRED_FLAG {
            get {
                return this.rEQUIRED_FLAGField;
            }
            set {
                this.rEQUIRED_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool REQUIRED_FLAGSpecified {
            get {
                return this.rEQUIRED_FLAGFieldSpecified;
            }
            set {
                this.rEQUIRED_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NUMERIC_FLAG {
            get {
                return this.nUMERIC_FLAGField;
            }
            set {
                this.nUMERIC_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NUMERIC_FLAGSpecified {
            get {
                return this.nUMERIC_FLAGFieldSpecified;
            }
            set {
                this.nUMERIC_FLAGFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sSysCodeCompletedEventHandler(object sender, sSysCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sSysCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sSysCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataSysCode[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSysCode[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sCodeTTreeViewCompletedEventHandler(object sender, sCodeTTreeViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sCodeTTreeViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sCodeTTreeViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCodeT[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCodeT[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sCodeTCompletedEventHandler(object sender, sCodeTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sCodeTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sCodeTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCodeT[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCodeT[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sCodeTSubTreeViewCompletedEventHandler(object sender, sCodeTSubTreeViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sCodeTSubTreeViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sCodeTSubTreeViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCodeTSub[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCodeTSub[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sCodeTSubCompletedEventHandler(object sender, sCodeTSubCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sCodeTSubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sCodeTSubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataCodeTSub[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataCodeTSub[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591