//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace EldigmPlusApp.M_WsMember {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWsMember", Namespace="http://tempuri.org/")]
    public partial class WsMember : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sMember_UsingFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback sMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback mMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback exMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback aMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback sMemberMainDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback sSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback mSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback exSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback aSiteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsMember() {
            this.Url = global::EldigmPlusApp.Properties.Settings.Default.EldigmPlusApp_M_WsMember_WsMember;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sMember_UsingFlagCompletedEventHandler sMember_UsingFlagCompleted;
        
        /// <remarks/>
        public event sMemberCompletedEventHandler sMemberCompleted;
        
        /// <remarks/>
        public event mMemberCompletedEventHandler mMemberCompleted;
        
        /// <remarks/>
        public event exMemberCompletedEventHandler exMemberCompleted;
        
        /// <remarks/>
        public event aMemberCompletedEventHandler aMemberCompleted;
        
        /// <remarks/>
        public event sMemberMainDBCompletedEventHandler sMemberMainDBCompleted;
        
        /// <remarks/>
        public event sSiteCompletedEventHandler sSiteCompleted;
        
        /// <remarks/>
        public event mSiteCompletedEventHandler mSiteCompleted;
        
        /// <remarks/>
        public event exSiteCompletedEventHandler exSiteCompleted;
        
        /// <remarks/>
        public event aSiteCompletedEventHandler aSiteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/sMember_UsingFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sMember_UsingFlag([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")] out DataMemberDB[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sMember_UsingFlag", new object[] {
                        pUsingFlag});
            reList = ((DataMemberDB[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sMember_UsingFlagAsync(string pUsingFlag) {
            this.sMember_UsingFlagAsync(pUsingFlag, null);
        }
        
        /// <remarks/>
        public void sMember_UsingFlagAsync(string pUsingFlag, object userState) {
            if ((this.sMember_UsingFlagOperationCompleted == null)) {
                this.sMember_UsingFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsMember_UsingFlagOperationCompleted);
            }
            this.InvokeAsync("sMember_UsingFlag", new object[] {
                        pUsingFlag}, this.sMember_UsingFlagOperationCompleted, userState);
        }
        
        private void OnsMember_UsingFlagOperationCompleted(object arg) {
            if ((this.sMember_UsingFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sMember_UsingFlagCompleted(this, new sMember_UsingFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/sMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sMember([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoCd, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")] out DataMemberDB[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sMember", new object[] {
                        pMemcoCd});
            reList = ((DataMemberDB[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sMemberAsync(string pMemcoCd) {
            this.sMemberAsync(pMemcoCd, null);
        }
        
        /// <remarks/>
        public void sMemberAsync(string pMemcoCd, object userState) {
            if ((this.sMemberOperationCompleted == null)) {
                this.sMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsMemberOperationCompleted);
            }
            this.InvokeAsync("sMember", new object[] {
                        pMemcoCd}, this.sMemberOperationCompleted, userState);
        }
        
        private void OnsMemberOperationCompleted(object arg) {
            if ((this.sMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sMemberCompleted(this, new sMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/mMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mMember([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mMember", new object[] {
                        pMemcoCd,
                        pMemcoNm,
                        pUsingFlag,
                        pSortNo,
                        pMemo});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mMemberAsync(string pMemcoCd, string pMemcoNm, string pUsingFlag, string pSortNo, string pMemo) {
            this.mMemberAsync(pMemcoCd, pMemcoNm, pUsingFlag, pSortNo, pMemo, null);
        }
        
        /// <remarks/>
        public void mMemberAsync(string pMemcoCd, string pMemcoNm, string pUsingFlag, string pSortNo, string pMemo, object userState) {
            if ((this.mMemberOperationCompleted == null)) {
                this.mMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmMemberOperationCompleted);
            }
            this.InvokeAsync("mMember", new object[] {
                        pMemcoCd,
                        pMemcoNm,
                        pUsingFlag,
                        pSortNo,
                        pMemo}, this.mMemberOperationCompleted, userState);
        }
        
        private void OnmMemberOperationCompleted(object arg) {
            if ((this.mMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mMemberCompleted(this, new mMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/exMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string exMember([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("exMember", new object[] {
                        pMemcoCd,
                        pMemcoNm});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exMemberAsync(string pMemcoCd, string pMemcoNm) {
            this.exMemberAsync(pMemcoCd, pMemcoNm, null);
        }
        
        /// <remarks/>
        public void exMemberAsync(string pMemcoCd, string pMemcoNm, object userState) {
            if ((this.exMemberOperationCompleted == null)) {
                this.exMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexMemberOperationCompleted);
            }
            this.InvokeAsync("exMember", new object[] {
                        pMemcoCd,
                        pMemcoNm}, this.exMemberOperationCompleted, userState);
        }
        
        private void OnexMemberOperationCompleted(object arg) {
            if ((this.exMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exMemberCompleted(this, new exMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/aMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string aMember([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoNM, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDb_Nm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSortNop, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pInputId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("aMember", new object[] {
                        pMemcoNM,
                        pDb_Nm,
                        pUsingFlag,
                        pSortNop,
                        pMemo,
                        pInputId});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aMemberAsync(string pMemcoNM, string pDb_Nm, string pUsingFlag, string pSortNop, string pMemo, string pInputId) {
            this.aMemberAsync(pMemcoNM, pDb_Nm, pUsingFlag, pSortNop, pMemo, pInputId, null);
        }
        
        /// <remarks/>
        public void aMemberAsync(string pMemcoNM, string pDb_Nm, string pUsingFlag, string pSortNop, string pMemo, string pInputId, object userState) {
            if ((this.aMemberOperationCompleted == null)) {
                this.aMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaMemberOperationCompleted);
            }
            this.InvokeAsync("aMember", new object[] {
                        pMemcoNM,
                        pDb_Nm,
                        pUsingFlag,
                        pSortNop,
                        pMemo,
                        pInputId}, this.aMemberOperationCompleted, userState);
        }
        
        private void OnaMemberOperationCompleted(object arg) {
            if ((this.aMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aMemberCompleted(this, new aMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/sMemberMainDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sMemberMainDB([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")] out DataMemberMainDB[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sMemberMainDB", new object[0]);
            reList = ((DataMemberMainDB[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sMemberMainDBAsync() {
            this.sMemberMainDBAsync(null);
        }
        
        /// <remarks/>
        public void sMemberMainDBAsync(object userState) {
            if ((this.sMemberMainDBOperationCompleted == null)) {
                this.sMemberMainDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsMemberMainDBOperationCompleted);
            }
            this.InvokeAsync("sMemberMainDB", new object[0], this.sMemberMainDBOperationCompleted, userState);
        }
        
        private void OnsMemberMainDBOperationCompleted(object arg) {
            if ((this.sMemberMainDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sMemberMainDBCompleted(this, new sMemberMainDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/sSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pMemcoCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pUsingFlag, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")] out DataSiteDB[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sSite", new object[] {
                        pMemcoCd,
                        pUsingFlag});
            reList = ((DataSiteDB[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sSiteAsync(string pMemcoCd, string pUsingFlag) {
            this.sSiteAsync(pMemcoCd, pUsingFlag, null);
        }
        
        /// <remarks/>
        public void sSiteAsync(string pMemcoCd, string pUsingFlag, object userState) {
            if ((this.sSiteOperationCompleted == null)) {
                this.sSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsSiteOperationCompleted);
            }
            this.InvokeAsync("sSite", new object[] {
                        pMemcoCd,
                        pUsingFlag}, this.sSiteOperationCompleted, userState);
        }
        
        private void OnsSiteOperationCompleted(object arg) {
            if ((this.sSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sSiteCompleted(this, new sSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/mSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string siteCd_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string siteNm_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string usingFlag_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sortNo_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string memo_val, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("mSite", new object[] {
                        siteCd_val,
                        siteNm_val,
                        usingFlag_val,
                        sortNo_val,
                        memo_val});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void mSiteAsync(string siteCd_val, string siteNm_val, string usingFlag_val, string sortNo_val, string memo_val) {
            this.mSiteAsync(siteCd_val, siteNm_val, usingFlag_val, sortNo_val, memo_val, null);
        }
        
        /// <remarks/>
        public void mSiteAsync(string siteCd_val, string siteNm_val, string usingFlag_val, string sortNo_val, string memo_val, object userState) {
            if ((this.mSiteOperationCompleted == null)) {
                this.mSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmSiteOperationCompleted);
            }
            this.InvokeAsync("mSite", new object[] {
                        siteCd_val,
                        siteNm_val,
                        usingFlag_val,
                        sortNo_val,
                        memo_val}, this.mSiteOperationCompleted, userState);
        }
        
        private void OnmSiteOperationCompleted(object arg) {
            if ((this.mSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mSiteCompleted(this, new mSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/exSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string exSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteNm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData) {
            object[] results = this.Invoke("exSite", new object[] {
                        pSiteNm});
            reMsg = ((string)(results[1]));
            reData = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void exSiteAsync(string pSiteNm) {
            this.exSiteAsync(pSiteNm, null);
        }
        
        /// <remarks/>
        public void exSiteAsync(string pSiteNm, object userState) {
            if ((this.exSiteOperationCompleted == null)) {
                this.exSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexSiteOperationCompleted);
            }
            this.InvokeAsync("exSite", new object[] {
                        pSiteNm}, this.exSiteOperationCompleted, userState);
        }
        
        private void OnexSiteOperationCompleted(object arg) {
            if ((this.exSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.exSiteCompleted(this, new exSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsMember/aSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string aSite([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDbNm, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] param, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reData, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("aSite", new object[] {
                        pDbNm,
                        param});
            reData = ((string)(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void aSiteAsync(string pDbNm, string[] param) {
            this.aSiteAsync(pDbNm, param, null);
        }
        
        /// <remarks/>
        public void aSiteAsync(string pDbNm, string[] param, object userState) {
            if ((this.aSiteOperationCompleted == null)) {
                this.aSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaSiteOperationCompleted);
            }
            this.InvokeAsync("aSite", new object[] {
                        pDbNm,
                        param}, this.aSiteOperationCompleted, userState);
        }
        
        private void OnaSiteOperationCompleted(object arg) {
            if ((this.aSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aSiteCompleted(this, new aSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")]
    public partial class DataMemberDB {
        
        private int mEMCO_CDField;
        
        private bool mEMCO_CDFieldSpecified;
        
        private string mEMCO_NMField;
        
        private string dB_NMField;
        
        private int uSING_FLAGField;
        
        private bool uSING_FLAGFieldSpecified;
        
        private int sORT_NOField;
        
        private bool sORT_NOFieldSpecified;
        
        private string mEMOField;
        
        /// <remarks/>
        public int MEMCO_CD {
            get {
                return this.mEMCO_CDField;
            }
            set {
                this.mEMCO_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MEMCO_CDSpecified {
            get {
                return this.mEMCO_CDFieldSpecified;
            }
            set {
                this.mEMCO_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMCO_NM {
            get {
                return this.mEMCO_NMField;
            }
            set {
                this.mEMCO_NMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DB_NM {
            get {
                return this.dB_NMField;
            }
            set {
                this.dB_NMField = value;
            }
        }
        
        /// <remarks/>
        public int USING_FLAG {
            get {
                return this.uSING_FLAGField;
            }
            set {
                this.uSING_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_FLAGSpecified {
            get {
                return this.uSING_FLAGFieldSpecified;
            }
            set {
                this.uSING_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SORT_NO {
            get {
                return this.sORT_NOField;
            }
            set {
                this.sORT_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SORT_NOSpecified {
            get {
                return this.sORT_NOFieldSpecified;
            }
            set {
                this.sORT_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMO {
            get {
                return this.mEMOField;
            }
            set {
                this.mEMOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")]
    public partial class DataSiteDB {
        
        private int sITE_CDField;
        
        private bool sITE_CDFieldSpecified;
        
        private int mEMCO_CDField;
        
        private bool mEMCO_CDFieldSpecified;
        
        private string sITE_NMField;
        
        private int uSING_FLAGField;
        
        private bool uSING_FLAGFieldSpecified;
        
        private int sORT_NOField;
        
        private bool sORT_NOFieldSpecified;
        
        private string mEMOField;
        
        /// <remarks/>
        public int SITE_CD {
            get {
                return this.sITE_CDField;
            }
            set {
                this.sITE_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SITE_CDSpecified {
            get {
                return this.sITE_CDFieldSpecified;
            }
            set {
                this.sITE_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MEMCO_CD {
            get {
                return this.mEMCO_CDField;
            }
            set {
                this.mEMCO_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MEMCO_CDSpecified {
            get {
                return this.mEMCO_CDFieldSpecified;
            }
            set {
                this.mEMCO_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SITE_NM {
            get {
                return this.sITE_NMField;
            }
            set {
                this.sITE_NMField = value;
            }
        }
        
        /// <remarks/>
        public int USING_FLAG {
            get {
                return this.uSING_FLAGField;
            }
            set {
                this.uSING_FLAGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool USING_FLAGSpecified {
            get {
                return this.uSING_FLAGFieldSpecified;
            }
            set {
                this.uSING_FLAGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SORT_NO {
            get {
                return this.sORT_NOField;
            }
            set {
                this.sORT_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SORT_NOSpecified {
            get {
                return this.sORT_NOFieldSpecified;
            }
            set {
                this.sORT_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMO {
            get {
                return this.mEMOField;
            }
            set {
                this.mEMOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Sys.MemberSite")]
    public partial class DataMemberMainDB {
        
        private int mEMCO_CDField;
        
        private bool mEMCO_CDFieldSpecified;
        
        private string mEMCO_NMField;
        
        /// <remarks/>
        public int MEMCO_CD {
            get {
                return this.mEMCO_CDField;
            }
            set {
                this.mEMCO_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MEMCO_CDSpecified {
            get {
                return this.mEMCO_CDFieldSpecified;
            }
            set {
                this.mEMCO_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MEMCO_NM {
            get {
                return this.mEMCO_NMField;
            }
            set {
                this.mEMCO_NMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sMember_UsingFlagCompletedEventHandler(object sender, sMember_UsingFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sMember_UsingFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sMember_UsingFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataMemberDB[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataMemberDB[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sMemberCompletedEventHandler(object sender, sMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataMemberDB[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataMemberDB[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mMemberCompletedEventHandler(object sender, mMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void exMemberCompletedEventHandler(object sender, exMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void aMemberCompletedEventHandler(object sender, aMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sMemberMainDBCompletedEventHandler(object sender, sMemberMainDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sMemberMainDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sMemberMainDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataMemberMainDB[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataMemberMainDB[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sSiteCompletedEventHandler(object sender, sSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataSiteDB[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataSiteDB[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void mSiteCompletedEventHandler(object sender, mSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void exSiteCompletedEventHandler(object sender, exSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class exSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal exSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void aSiteCompletedEventHandler(object sender, aSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string reData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591