//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace EldigmPlusApp.Mem_WsInOut {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWsInOut", Namespace="http://tempuri.org/")]
    public partial class WsInOut : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sInOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback sInOutLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsInOut() {
            this.Url = global::EldigmPlusApp.Properties.Settings.Default.EldigmPlusApp_Mem_WsInOut_WsInOut;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sInOutCompletedEventHandler sInOutCompleted;
        
        /// <remarks/>
        public event sInOutLogCompletedEventHandler sInOutLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsInOut/sInOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sInOut([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDbnm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDtp1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDtp2, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Worker.InOut")] out DataInOut[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sInOut", new object[] {
                        pDbnm,
                        pSiteCd,
                        pDtp1,
                        pDtp2});
            reList = ((DataInOut[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sInOutAsync(string pDbnm, string pSiteCd, string pDtp1, string pDtp2) {
            this.sInOutAsync(pDbnm, pSiteCd, pDtp1, pDtp2, null);
        }
        
        /// <remarks/>
        public void sInOutAsync(string pDbnm, string pSiteCd, string pDtp1, string pDtp2, object userState) {
            if ((this.sInOutOperationCompleted == null)) {
                this.sInOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsInOutOperationCompleted);
            }
            this.InvokeAsync("sInOut", new object[] {
                        pDbnm,
                        pSiteCd,
                        pDtp1,
                        pDtp2}, this.sInOutOperationCompleted, userState);
        }
        
        private void OnsInOutOperationCompleted(object arg) {
            if ((this.sInOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sInOutCompleted(this, new sInOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWsInOut/sInOutLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sInOutLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDbnm, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pSiteCd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDtp1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pDtp2, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Worker.InOut")] out DataInOut[] reList, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string reMsg) {
            object[] results = this.Invoke("sInOutLog", new object[] {
                        pDbnm,
                        pSiteCd,
                        pDtp1,
                        pDtp2});
            reList = ((DataInOut[])(results[1]));
            reMsg = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sInOutLogAsync(string pDbnm, string pSiteCd, string pDtp1, string pDtp2) {
            this.sInOutLogAsync(pDbnm, pSiteCd, pDtp1, pDtp2, null);
        }
        
        /// <remarks/>
        public void sInOutLogAsync(string pDbnm, string pSiteCd, string pDtp1, string pDtp2, object userState) {
            if ((this.sInOutLogOperationCompleted == null)) {
                this.sInOutLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsInOutLogOperationCompleted);
            }
            this.InvokeAsync("sInOutLog", new object[] {
                        pDbnm,
                        pSiteCd,
                        pDtp1,
                        pDtp2}, this.sInOutLogOperationCompleted, userState);
        }
        
        private void OnsInOutLogOperationCompleted(object arg) {
            if ((this.sInOutLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sInOutLogCompleted(this, new sInOutLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EldigmPlusSvc_Main.WebSvc.Worker.InOut")]
    public partial class DataInOut {
        
        private int lAB_NOField;
        
        private bool lAB_NOFieldSpecified;
        
        private string lAB_NMField;
        
        private System.DateTime iN_DTField;
        
        private bool iN_DTFieldSpecified;
        
        private System.DateTime oUT_DTField;
        
        private bool oUT_DTFieldSpecified;
        
        private System.DateTime eVENT_DTField;
        
        private bool eVENT_DTFieldSpecified;
        
        private string cO_NMField;
        
        private string tEAM_NMField;
        
        private int dEV_CDField;
        
        private bool dEV_CDFieldSpecified;
        
        private string dEV_TYPE_SCDField;
        
        private string dEV_IO_SCDField;
        
        private string cODE_NMField;
        
        /// <remarks/>
        public int LAB_NO {
            get {
                return this.lAB_NOField;
            }
            set {
                this.lAB_NOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LAB_NOSpecified {
            get {
                return this.lAB_NOFieldSpecified;
            }
            set {
                this.lAB_NOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LAB_NM {
            get {
                return this.lAB_NMField;
            }
            set {
                this.lAB_NMField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IN_DT {
            get {
                return this.iN_DTField;
            }
            set {
                this.iN_DTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IN_DTSpecified {
            get {
                return this.iN_DTFieldSpecified;
            }
            set {
                this.iN_DTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OUT_DT {
            get {
                return this.oUT_DTField;
            }
            set {
                this.oUT_DTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OUT_DTSpecified {
            get {
                return this.oUT_DTFieldSpecified;
            }
            set {
                this.oUT_DTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EVENT_DT {
            get {
                return this.eVENT_DTField;
            }
            set {
                this.eVENT_DTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EVENT_DTSpecified {
            get {
                return this.eVENT_DTFieldSpecified;
            }
            set {
                this.eVENT_DTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CO_NM {
            get {
                return this.cO_NMField;
            }
            set {
                this.cO_NMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TEAM_NM {
            get {
                return this.tEAM_NMField;
            }
            set {
                this.tEAM_NMField = value;
            }
        }
        
        /// <remarks/>
        public int DEV_CD {
            get {
                return this.dEV_CDField;
            }
            set {
                this.dEV_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DEV_CDSpecified {
            get {
                return this.dEV_CDFieldSpecified;
            }
            set {
                this.dEV_CDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DEV_TYPE_SCD {
            get {
                return this.dEV_TYPE_SCDField;
            }
            set {
                this.dEV_TYPE_SCDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DEV_IO_SCD {
            get {
                return this.dEV_IO_SCDField;
            }
            set {
                this.dEV_IO_SCDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CODE_NM {
            get {
                return this.cODE_NMField;
            }
            set {
                this.cODE_NMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sInOutCompletedEventHandler(object sender, sInOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sInOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sInOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataInOut[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataInOut[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sInOutLogCompletedEventHandler(object sender, sInOutLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sInOutLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sInOutLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public DataInOut[] reList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataInOut[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string reMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591